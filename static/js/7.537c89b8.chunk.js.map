{"version":3,"sources":["node_modules/react-native-web/dist/exports/TouchableWithoutFeedback/index.js","src/common/screens/modals/ImageViewer.js"],"names":["forwardPropsList","accessibilityDisabled","accessibilityLabel","accessibilityLiveRegion","accessibilityRole","accessibilityState","accessibilityValue","children","disabled","focusable","nativeID","onBlur","onFocus","onLayout","testID","MemoedTouchableWithoutFeedback","React","props","forwardedRef","delayPressIn","delayPressOut","delayLongPress","onLongPress","onPress","onPressIn","onPressOut","rejectResponderTermination","hostRef","useRef","pressConfig","useMemo","cancelable","delayPressStart","delayPressEnd","onPressStart","onPressEnd","pressEventHandlers","usePressEvents","element","only","supportedProps","pick","pickProps","ref","useMergeRefs","elementProps","apply","concat","displayName","ImageViewer","params","useRoute","navigation","useNavigation","width","window","screen","availWidth","height","availHeight","goBack","style","flex","View","backgroundColor","alignItems","justifyContent","src","url","maxWidth","maxHeight","margin"],"mappings":"iMAgBIA,EAAmB,CACrBC,uBAAuB,EACvBC,oBAAoB,EACpBC,yBAAyB,EACzBC,mBAAmB,EACnBC,oBAAoB,EACpBC,oBAAoB,EACpBC,UAAU,EACVC,UAAU,EACVC,WAAW,EACXC,UAAU,EACVC,QAAQ,EACRC,SAAS,EACTC,UAAU,EACVC,QAAQ,GA2CV,IAAIC,EAA8CC,OAAyBA,cApC3E,SAAkCC,EAAOC,GACvC,IAAIC,EAAeF,EAAME,aACrBC,EAAgBH,EAAMG,cACtBC,EAAiBJ,EAAMI,eACvBb,EAAWS,EAAMT,SACjBC,EAAYQ,EAAMR,UAClBa,EAAcL,EAAMK,YACpBC,EAAUN,EAAMM,QAChBC,EAAYP,EAAMO,UAClBC,EAAaR,EAAMQ,WACnBC,EAA6BT,EAAMS,2BACnCC,EAAUC,iBAAO,MACjBC,EAAcC,mBAAQ,WACxB,MAAO,CACLC,YAAaL,EACblB,SAAUA,EACVa,eAAgBA,EAChBW,gBAAiBb,EACjBc,cAAeb,EACfE,YAAaA,EACbC,QAASA,EACTW,aAAcV,EACdW,WAAYV,KAEb,CAACjB,EAAUW,EAAcC,EAAeC,EAAgBC,EAAaC,EAASC,EAAWC,EAAYC,IACpGU,EAAqBC,kBAAeV,EAASE,GAC7CS,EAAUtB,WAAeuB,KAAKtB,EAAMV,UACpCA,EAAW,CAAC+B,EAAQrB,MAAMV,UAC1BiC,EAhCU,SAAmBvB,GACjC,OAAOwB,kBAAKxB,EAAOjB,GA+BE0C,CAAUzB,GAC/BuB,EAAevC,sBAAwBO,EACvCgC,EAAe/B,WAAaD,IAA0B,IAAdC,EACxC+B,EAAeG,IAAMC,kBAAa1B,EAAcS,EAASW,EAAQK,KACjE,IAAIE,EAAe,IAAcL,EAAgBJ,GACjD,OAAoBpB,eAAmB8B,MAAM9B,EAAO,CAACsB,EAASO,GAAcE,OAAOxC,QAIrFQ,EAA+BiC,YAAc,2BAC9BjC,Q,eCtEA,SAASkC,IACtB,IAAQC,EAAWC,qBAAXD,OACFE,EAAaC,0BACbC,EACJC,OAAOC,OAAOC,YAAc,IAAM,IAAMF,OAAOC,OAAOC,WAClDC,EAASH,OAAOC,OAAOG,YAE7B,OACE,cAAC,EAAD,CAA0BpC,QAAS6B,EAAWQ,OAAQC,MAAO,CAAEC,KAAM,GAArE,SACE,cAACC,EAAA,QAAD,CACEF,MAAO,CACLC,KAAM,EACNE,gBAAgB,OAChBC,WAAY,SACZC,eAAgB,UALpB,SAQE,qBACEC,IAAG,6CAA+CjB,EAAOkB,IAAtD,mBACHd,MAAO,OACPI,OAAQ,OACRG,MAAO,CACLQ,SAAUf,EAAQ,KAClBgB,UAAWZ,EAAS,KACpBa,OAAQ","file":"static/js/7.537c89b8.chunk.js","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport * as React from 'react';\nimport { useMemo, useRef } from 'react';\nimport pick from '../../modules/pick';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePressEvents from '../../modules/usePressEvents';\nvar forwardPropsList = {\n  accessibilityDisabled: true,\n  accessibilityLabel: true,\n  accessibilityLiveRegion: true,\n  accessibilityRole: true,\n  accessibilityState: true,\n  accessibilityValue: true,\n  children: true,\n  disabled: true,\n  focusable: true,\n  nativeID: true,\n  onBlur: true,\n  onFocus: true,\n  onLayout: true,\n  testID: true\n};\n\nvar pickProps = function pickProps(props) {\n  return pick(props, forwardPropsList);\n};\n\nfunction TouchableWithoutFeedback(props, forwardedRef) {\n  var delayPressIn = props.delayPressIn,\n      delayPressOut = props.delayPressOut,\n      delayLongPress = props.delayLongPress,\n      disabled = props.disabled,\n      focusable = props.focusable,\n      onLongPress = props.onLongPress,\n      onPress = props.onPress,\n      onPressIn = props.onPressIn,\n      onPressOut = props.onPressOut,\n      rejectResponderTermination = props.rejectResponderTermination;\n  var hostRef = useRef(null);\n  var pressConfig = useMemo(function () {\n    return {\n      cancelable: !rejectResponderTermination,\n      disabled: disabled,\n      delayLongPress: delayLongPress,\n      delayPressStart: delayPressIn,\n      delayPressEnd: delayPressOut,\n      onLongPress: onLongPress,\n      onPress: onPress,\n      onPressStart: onPressIn,\n      onPressEnd: onPressOut\n    };\n  }, [disabled, delayPressIn, delayPressOut, delayLongPress, onLongPress, onPress, onPressIn, onPressOut, rejectResponderTermination]);\n  var pressEventHandlers = usePressEvents(hostRef, pressConfig);\n  var element = React.Children.only(props.children);\n  var children = [element.props.children];\n  var supportedProps = pickProps(props);\n  supportedProps.accessibilityDisabled = disabled;\n  supportedProps.focusable = !disabled && focusable !== false;\n  supportedProps.ref = useMergeRefs(forwardedRef, hostRef, element.ref);\n  var elementProps = Object.assign(supportedProps, pressEventHandlers);\n  return /*#__PURE__*/React.cloneElement.apply(React, [element, elementProps].concat(children));\n}\n\nvar MemoedTouchableWithoutFeedback = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(TouchableWithoutFeedback));\nMemoedTouchableWithoutFeedback.displayName = 'TouchableWithoutFeedback';\nexport default MemoedTouchableWithoutFeedback;","import React from \"react\";\r\nimport { View, TouchableWithoutFeedback } from \"react-native\";\r\nimport { COLOR_black } from \"@env\";\r\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\r\n\r\nexport default function ImageViewer() {\r\n  const { params } = useRoute();\r\n  const navigation = useNavigation();\r\n  const width =\r\n    window.screen.availWidth >= 400 ? 400 : window.screen.availWidth;\r\n  const height = window.screen.availHeight;\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={navigation.goBack} style={{ flex: 1 }}>\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          backgroundColor: COLOR_black,\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <img\r\n          src={`https://drive.google.com/uc?authuser=0&id=${params.url}&export=download`}\r\n          width={\"auto\"}\r\n          height={\"auto\"}\r\n          style={{\r\n            maxWidth: width + \"px\",\r\n            maxHeight: height + \"px\",\r\n            margin: \"auto\",\r\n          }}\r\n        />\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n}\r\n"],"sourceRoot":""}