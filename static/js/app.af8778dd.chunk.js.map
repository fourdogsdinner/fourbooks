{"version":3,"sources":["src/common/elements/ELoading.js","src/common/components/ZawgyiUnicodeConverter.js","src/utils/hooks/useStorage.js","src/common/screens/index.js","src/common/navigation/stack/index.js","src/common/navigation/tab/index.js","src/common/navigation/index.js","App.js","src/utils/hooks/useSettings.js","src/common/elements/EIcon.js"],"names":["ELoading","minHeight","style","flex","alignItems","justifyContent","className","role","ZawgyiUnicodeConverter","useSettings","font","changeFont","onClick","useStorage","name","getItem","React","useCallback","raw","window","localStorage","JSON","parse","setItem","data","stringify","removeItem","Fallback","memo","LazyHome","lazy","Home","Suspense","fallback","LazyImages","Images","LazyPost","Post","LazyImageViewer","ImageViewer","Stack","createNativeStackNavigator","BookStackNavigation","Navigator","screenOptions","headerShown","Screen","component","Tab","createBottomTabNavigator","TabNavigation","Tabs","initialRouteName","options","tabBarIcon","focused","color","size","EIcon","_","Navigation","loading","NavigationContainer","StatusBar","backgroundColor","App","settingsContext","createContext","useContext","initialState","dark","rate","shouldPlay","SettingsContextProvider","children","useState","state","setState","readFromStorage","item","prev","useEffect","value","changeTheme","focus","Provider","fontSize"],"mappings":"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","file":"static/js/app.af8778dd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { View } from \"react-native-web\";\r\n\r\nexport default function ELoading({ minHeight = 400 }) {\r\n  return (\r\n    <View\r\n      style={{\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        minHeight: minHeight,\r\n      }}\r\n    >\r\n      <div className={\"spinner-border text-primary\"} role=\"status\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n    </View>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport useSettings from \"~/utils/hooks/useSettings\";\r\n\r\nexport default function ZawgyiUnicodeConverter() {\r\n  const { font, changeFont } = useSettings();\r\n\r\n  return (\r\n    <button\r\n      className=\"btn text-capitalize btn-success btn-sm border-light border-1 border me-2\"\r\n      onClick={changeFont}\r\n    >\r\n      {font}\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function useStorage(name) {\r\n  const getItem = React.useCallback(() => {\r\n    const raw = window.localStorage.getItem(name);\r\n    if (raw) {\r\n      return JSON.parse(raw);\r\n    }\r\n    return null;\r\n  }, [name]);\r\n\r\n  const setItem = React.useCallback(\r\n    (data) => {\r\n      if (!data) return;\r\n      window.localStorage.setItem(name, JSON.stringify(data));\r\n    },\r\n    [name]\r\n  );\r\n\r\n  const removeItem = React.useCallback(() => {\r\n    window.localStorage.removeItem(name);\r\n  }, []);\r\n\r\n  return { getItem, setItem, removeItem };\r\n}\r\n","import React from \"react\";\r\nimport ELoading from \"../elements/ELoading\";\r\n\r\nconst Fallback = React.memo(() => <ELoading />, []);\r\n\r\nconst LazyHome = React.lazy(() => import(\"./tab/Home\"));\r\n\r\nexport const Home = () => (\r\n  <React.Suspense fallback={<Fallback />}>\r\n    <LazyHome />\r\n  </React.Suspense>\r\n);\r\n\r\nconst LazyImages = React.lazy(() => import(\"./tab/Images\"));\r\n\r\nexport const Images = () => (\r\n  <React.Suspense fallback={<Fallback />}>\r\n    <LazyImages />\r\n  </React.Suspense>\r\n);\r\n\r\nconst LazyFavorite = React.lazy(() => import(\"./tab/Favorite\"));\r\n\r\nexport const Favorite = () => (\r\n  <React.Suspense fallback={<Fallback />}>\r\n    <LazyFavorite />\r\n  </React.Suspense>\r\n);\r\n\r\nconst LazyPost = React.lazy(() => import(\"./other/Post\"));\r\n\r\nexport const Post = () => (\r\n  <React.Suspense fallback={<Fallback />}>\r\n    <LazyPost />\r\n  </React.Suspense>\r\n);\r\n\r\nconst LazyImageViewer = React.lazy(() => import(\"./modals/ImageViewer\"));\r\n\r\nexport const ImageViewer = () => (\r\n  <React.Suspense fallback={<Fallback />}>\r\n    <LazyImageViewer />\r\n  </React.Suspense>\r\n);\r\n\r\n// export { default as ImageViewer } from \"./modals/ImageViewer\";\r\n","import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport React from \"react\";\r\nimport { Favorite, Home, Post } from \"~/common/screens\";\r\nimport { COLOR_primary, COLOR_light } from \"@env\";\r\nimport ZawgyiUnicodeConverter from \"~/common/components/ZawgyiUnicodeConverter\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport function BookStackNavigation() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n      }}\r\n    >\r\n      <Stack.Screen name=\"Book\" component={Home} />\r\n      <Stack.Screen name=\"BookPost\" component={Post} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nexport function FavoriteStackNavigation() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        headerTintColor: COLOR_light,\r\n        headerStyle: {\r\n          backgroundColor: COLOR_primary,\r\n          headerRight: () => <ZawgyiUnicodeConverter />,\r\n        },\r\n      }}\r\n    >\r\n      <Stack.Screen\r\n        name=\"Favorite\"\r\n        component={Favorite}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"FavoritePost\"\r\n        component={Post}\r\n        options={({ route }) => ({ title: route.params?.title })}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport EIcon from \"~/common/elements/EIcon\";\r\nimport { BookStackNavigation, FavoriteStackNavigation } from \"../stack\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { Images, ImageViewer } from \"~/common/screens\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function TabNavigation() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n      }}\r\n    >\r\n      <Stack.Screen name=\"Tabs\" component={Tabs} />\r\n      <Stack.Screen name=\"ImageViewer\" component={ImageViewer} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nfunction Tabs() {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={{ headerShown: false }}\r\n      initialRouteName={\"Books\"}\r\n    >\r\n      <Tab.Screen\r\n        name={\"Books\"}\r\n        component={BookStackNavigation}\r\n        options={{\r\n          tabBarIcon: ({ focused, color, size }) => (\r\n            <EIcon\r\n              name={focused ? \"book-fill\" : \"book\"}\r\n              color={color}\r\n              size={size}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name={\"Images\"}\r\n        component={Images}\r\n        options={{\r\n          tabBarIcon: ({ _, color, size }) => (\r\n            <EIcon name={\"images\"} color={color} size={size} />\r\n          ),\r\n        }}\r\n      />\r\n      {/* <Tab.Screen\r\n        name={\"Favorites\"}\r\n        component={FavoriteStackNavigation}\r\n        options={{\r\n          tabBarIcon: ({ focused, color, size }) => (\r\n            <EIcon\r\n              name={focused ? \"heart-fill\" : \"heart\"}\r\n              color={color}\r\n              size={size}\r\n            />\r\n          ),\r\n        }}\r\n      /> */}\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n","import { NavigationContainer } from \"@react-navigation/native\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport React from \"react\";\r\nimport useSettings from \"~/utils/hooks/useSettings\";\r\nimport TabNavigation from \"./tab\";\r\n\r\nexport default function Navigation() {\r\n  const { loading } = useSettings();\r\n\r\n  if (loading) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <StatusBar backgroundColor=\"rgba(0,0,0,0.2)\" />\r\n      <TabNavigation />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n","import { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport Navigation from \"~/common/navigation\";\nimport { SettingsContextProvider } from \"~/utils/hooks/useSettings\";\n\nexport default function App() {\n  return (\n    <SettingsContextProvider>\n      <SafeAreaProvider style={{ flex: 1 }}>\n        <Navigation />\n      </SafeAreaProvider>\n    </SettingsContextProvider>\n  );\n}\n","import React from \"react\";\r\nimport useStorage from \"./useStorage\";\r\n\r\nconst settingsContext = React.createContext();\r\n\r\nexport default function useSettings() {\r\n  return React.useContext(settingsContext);\r\n}\r\n\r\nconst initialState = {\r\n  dark: false,\r\n  font: \"zawgyi\",\r\n  rate: 1.19,\r\n  shouldPlay: false,\r\n  loading: true,\r\n};\r\n\r\nexport function SettingsContextProvider({ children }) {\r\n  const [state, setState] = React.useState(initialState);\r\n  const { getItem, setItem } = useStorage(\"@settings\");\r\n\r\n  // Do On Start of App\r\n  const readFromStorage = React.useCallback(() => {\r\n    const item = getItem();\r\n    if (item) {\r\n      return setState((prev) => ({ ...prev, ...item, loading: false }));\r\n    }\r\n    return setState((prev) => ({ ...prev, loading: false }));\r\n  }, []);\r\n\r\n  React.useEffect(() => readFromStorage(), []);\r\n\r\n  // Do When State Changes\r\n  React.useEffect(() => {\r\n    !state.loading && setItem(state);\r\n  }, [state]);\r\n\r\n  // Methods\r\n  const changeTheme = React.useCallback(() => {\r\n    setState((prev) => ({ ...prev, dark: !state.dark }));\r\n  }, []);\r\n\r\n  const changeFont = React.useCallback(() => {\r\n    setState((prev) => ({\r\n      ...prev,\r\n      font: prev.font === \"zawgyi\" ? \"unicode\" : \"zawgyi\",\r\n    }));\r\n  }, []);\r\n\r\n  const value = {\r\n    changeTheme,\r\n    changeFont,\r\n    dark: state.dark,\r\n    font: state.font,\r\n    focus: state.font,\r\n    rate: state.rate,\r\n    shouldPlay: state.shouldPlay,\r\n    loading: state.loading,\r\n  };\r\n\r\n  return (\r\n    <settingsContext.Provider value={value}>\r\n      {children}\r\n    </settingsContext.Provider>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function EIcon({ size = \"24px\", color, name, className }) {\r\n  return (\r\n    <i\r\n      className={`bi-${name} ${className}`}\r\n      style={{ fontSize: size, color: color }}\r\n    />\r\n  );\r\n}\r\n"],"sourceRoot":""}